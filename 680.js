"use strict";(self.webpackChunk_metamask_test_dapp=self.webpackChunk_metamask_test_dapp||[]).push([[680],{32680:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  SIWEController: () => (/* reexport */ SIWEController),\n  W3mConnectingSiwe: () => (/* reexport */ W3mConnectingSiwe),\n  W3mConnectingSiweView: () => (/* reexport */ W3mConnectingSiweView),\n  createSIWEConfig: () => (/* binding */ createSIWEConfig),\n  formatMessage: () => (/* reexport */ index_es/* formatMessage */.hwK),\n  getAddressFromMessage: () => (/* reexport */ getAddressFromMessage),\n  getChainIdFromMessage: () => (/* reexport */ getChainIdFromMessage),\n  getDidAddress: () => (/* reexport */ index_es/* getDidAddress */.q_h),\n  getDidChainId: () => (/* reexport */ index_es/* getDidChainId */.aG$),\n  mapToSIWX: () => (/* reexport */ mapToSIWX),\n  verifySignature: () => (/* reexport */ verifySignature)\n});\n\n// EXTERNAL MODULE: ./node_modules/valtio/esm/vanilla/utils.mjs\nvar utils = __webpack_require__(4707);\n// EXTERNAL MODULE: ./node_modules/valtio/esm/vanilla.mjs + 1 modules\nvar vanilla = __webpack_require__(29073);\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/core/controller/SIWEController.js\n\n\nconst state = (0,vanilla/* proxy */.BX)({\n    status: 'uninitialized'\n});\nconst SIWEController = {\n    state,\n    subscribeKey(key, callback) {\n        return (0,utils/* subscribeKey */.u$)(state, key, callback);\n    },\n    subscribe(callback) {\n        return (0,vanilla/* subscribe */.B1)(state, () => callback(state));\n    },\n    _getClient() {\n        if (!state._client) {\n            throw new Error('SIWEController client not set');\n        }\n        return state._client;\n    },\n    async getNonce(address) {\n        const client = this._getClient();\n        const nonce = await client.getNonce(address);\n        this.setNonce(nonce);\n        return nonce;\n    },\n    async getSession() {\n        try {\n            const client = this._getClient();\n            const session = await client.getSession();\n            if (session) {\n                this.setSession(session);\n                this.setStatus('success');\n            }\n            return session || undefined;\n        }\n        catch {\n            return undefined;\n        }\n    },\n    createMessage(args) {\n        const client = this._getClient();\n        const message = client.createMessage(args);\n        this.setMessage(message);\n        return message;\n    },\n    async verifyMessage(args) {\n        const client = this._getClient();\n        const isValid = await client.verifyMessage(args);\n        return isValid;\n    },\n    async signIn() {\n        const client = this._getClient();\n        const session = await client.signIn();\n        return session;\n    },\n    async signOut() {\n        const client = this._getClient();\n        await client.signOut();\n        this.setStatus('ready');\n        this.setSession(undefined);\n        client.onSignOut?.();\n    },\n    onSignIn(args) {\n        const client = this._getClient();\n        client.onSignIn?.(args);\n    },\n    onSignOut() {\n        const client = this._getClient();\n        client.onSignOut?.();\n    },\n    async setSIWEClient(client) {\n        state._client = (0,vanilla/* ref */.KR)(client);\n        state.session = await this.getSession();\n        state.status = state.session ? 'success' : 'ready';\n    },\n    setNonce(nonce) {\n        state.nonce = nonce;\n    },\n    setStatus(status) {\n        state.status = status;\n    },\n    setMessage(message) {\n        state.message = message;\n    },\n    setSession(session) {\n        state.session = session;\n        state.status = session ? 'success' : 'ready';\n    }\n};\n//# sourceMappingURL=SIWEController.js.map\n// EXTERNAL MODULE: ./node_modules/@reown/appkit-core/dist/esm/exports/index.js + 32 modules\nvar esm_exports = __webpack_require__(1542);\n// EXTERNAL MODULE: ./node_modules/@reown/appkit-common/dist/esm/index.js + 13 modules\nvar esm = __webpack_require__(79066);\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/core/utils/ConstantsUtil.js\nconst ConstantsUtil = {\n    FIVE_MINUTES_IN_MS: 300000\n};\n//# sourceMappingURL=ConstantsUtil.js.map\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/src/client.js\n\n\n\n\nclass AppKitSIWEClient {\n    constructor(siweConfig) {\n        const { enabled = true, nonceRefetchIntervalMs = ConstantsUtil.FIVE_MINUTES_IN_MS, sessionRefetchIntervalMs = ConstantsUtil.FIVE_MINUTES_IN_MS, signOutOnAccountChange = true, signOutOnDisconnect = true, signOutOnNetworkChange = true, ...siweConfigMethods } = siweConfig;\n        this.options = {\n            enabled,\n            nonceRefetchIntervalMs,\n            sessionRefetchIntervalMs,\n            signOutOnDisconnect,\n            signOutOnAccountChange,\n            signOutOnNetworkChange\n        };\n        this.methods = siweConfigMethods;\n    }\n    async getNonce(address) {\n        const nonce = await this.methods.getNonce(address);\n        if (!nonce) {\n            throw new Error('siweControllerClient:getNonce - nonce is undefined');\n        }\n        return nonce;\n    }\n    async getMessageParams() {\n        return ((await this.methods.getMessageParams?.()) || {});\n    }\n    createMessage(args) {\n        const message = this.methods.createMessage(args);\n        if (!message) {\n            throw new Error('siweControllerClient:createMessage - message is undefined');\n        }\n        return message;\n    }\n    async verifyMessage(args) {\n        const isValid = await this.methods.verifyMessage(args);\n        return isValid;\n    }\n    async getSession() {\n        const session = await this.methods.getSession();\n        if (!session) {\n            throw new Error('siweControllerClient:getSession - session is undefined');\n        }\n        return session;\n    }\n    async signIn() {\n        if (!SIWEController.state._client) {\n            throw new Error('SIWE client needs to be initialized before calling signIn');\n        }\n        const caipAddress = esm_exports/* ChainController */.WB.state.activeCaipAddress;\n        const address = caipAddress ? esm_exports/* CoreHelperUtil */.wE.getPlainAddress(caipAddress) : '';\n        const nonce = await this.methods.getNonce(address);\n        if (!address) {\n            throw new Error('An address is required to create a SIWE message.');\n        }\n        const caipNetwork = esm_exports/* ChainController */.WB.state.activeCaipNetwork;\n        if (!caipNetwork?.id) {\n            throw new Error('A chainId is required to create a SIWE message.');\n        }\n        const chainId = caipNetwork.id;\n        if (!chainId) {\n            throw new Error('A chainId is required to create a SIWE message.');\n        }\n        const signOutOnNetworkChange = SIWEController.state._client?.options.signOutOnNetworkChange;\n        if (signOutOnNetworkChange) {\n            SIWEController.state._client.options.signOutOnNetworkChange = false;\n            await this.signOut();\n        }\n        if (signOutOnNetworkChange) {\n            SIWEController.state._client.options.signOutOnNetworkChange = true;\n        }\n        const messageParams = await this.getMessageParams?.();\n        const message = this.methods.createMessage({\n            address: caipAddress,\n            chainId: Number(chainId),\n            nonce,\n            version: '1',\n            iat: messageParams?.iat || new Date().toISOString(),\n            ...messageParams\n        });\n        const type = esm_exports/* StorageUtil */.iT.getConnectedConnector();\n        if (type === 'ID_AUTH') {\n            esm_exports/* RouterController */.IN.pushTransactionStack({\n                view: null,\n                goBack: false,\n                replace: true,\n                onSuccess() {\n                    esm_exports/* ModalController */.W3.close();\n                }\n            });\n        }\n        const signature = await esm_exports/* ConnectionController */.x4.signMessage(message);\n        const isValid = await this.methods.verifyMessage({ message, signature: signature });\n        if (!isValid) {\n            throw new Error('Error verifying SIWE signature');\n        }\n        const session = await this.methods.getSession();\n        if (!session) {\n            throw new Error('Error verifying SIWE signature');\n        }\n        if (this.methods.onSignIn) {\n            this.methods.onSignIn(session);\n        }\n        return session;\n    }\n    async signOut() {\n        this.methods.onSignOut?.();\n        return this.methods.signOut();\n    }\n}\n//# sourceMappingURL=client.js.map\n// EXTERNAL MODULE: ./node_modules/@walletconnect/utils/dist/index.es.js + 8 modules\nvar index_es = __webpack_require__(51959);\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/core/helpers/index.js\n\nconst ETH_ADDRESS_PATTERN = /0x[a-fA-F0-9]{40}/u;\nconst ETH_CHAIN_ID_IN_SIWE_PATTERN = /Chain ID: (?<temp1>\\d+)/u;\nfunction getAddressFromMessage(message) {\n    return message.match(ETH_ADDRESS_PATTERN)?.[0] || '';\n}\nfunction getChainIdFromMessage(message) {\n    return `eip155:${message.match(ETH_CHAIN_ID_IN_SIWE_PATTERN)?.[1] || 1}`;\n}\nasync function verifySignature({ address, message, signature, chainId, projectId }) {\n    let isValid = (0,index_es/* isValidEip191Signature */.quX)(address, message, signature);\n    if (!isValid) {\n        isValid = await (0,index_es/* isValidEip1271Signature */.ucy)(address, message, signature, chainId, projectId);\n    }\n    return isValid;\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/@reown/appkit-ui/dist/esm/index.js + 265 modules\nvar dist_esm = __webpack_require__(57104);\n// EXTERNAL MODULE: ./node_modules/lit/index.js + 2 modules\nvar lit = __webpack_require__(91260);\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/styles.js\n\n/* harmony default export */ const styles = ((0,lit/* css */.AH) `\n  :host {\n    display: flex;\n    justify-content: center;\n    gap: var(--wui-spacing-2xl);\n  }\n\n  wui-visual-thumbnail:nth-child(1) {\n    z-index: 1;\n  }\n`);\n//# sourceMappingURL=styles.js.map\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/scaffold/partials/w3m-connecting-siwe/index.js\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\nlet W3mConnectingSiwe = class W3mConnectingSiwe extends lit/* LitElement */.WF {\n    constructor() {\n        super(...arguments);\n        this.dappImageUrl = esm_exports/* OptionsController */.Hd.state.metadata?.icons;\n        this.walletImageUrl = esm_exports/* AccountController */.Uj.state.connectedWalletInfo?.icon;\n    }\n    firstUpdated() {\n        const visuals = this.shadowRoot?.querySelectorAll('wui-visual-thumbnail');\n        if (visuals?.[0]) {\n            this.createAnimation(visuals[0], 'translate(18px)');\n        }\n        if (visuals?.[1]) {\n            this.createAnimation(visuals[1], 'translate(-18px)');\n        }\n    }\n    render() {\n        return (0,lit/* html */.qy) `\n      <wui-visual-thumbnail\n        ?borderRadiusFull=${true}\n        .imageSrc=${this.dappImageUrl?.[0]}\n      ></wui-visual-thumbnail>\n      <wui-visual-thumbnail .imageSrc=${this.walletImageUrl}></wui-visual-thumbnail>\n    `;\n    }\n    createAnimation(element, translation) {\n        element.animate([{ transform: 'translateX(0px)' }, { transform: translation }], {\n            duration: 1600,\n            easing: 'cubic-bezier(0.56, 0, 0.48, 1)',\n            direction: 'alternate',\n            iterations: Infinity\n        });\n    }\n};\nW3mConnectingSiwe.styles = styles;\nW3mConnectingSiwe = __decorate([\n    (0,dist_esm.customElement)('w3m-connecting-siwe')\n], W3mConnectingSiwe);\n\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/lit/decorators.js\nvar decorators = __webpack_require__(25707);\n// EXTERNAL MODULE: ./node_modules/@reown/appkit-wallet/dist/esm/index.js + 8 modules\nvar appkit_wallet_dist_esm = __webpack_require__(41457);\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/scaffold/views/w3m-connecting-siwe-view/index.js\nvar w3m_connecting_siwe_view_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\nlet W3mConnectingSiweView = class W3mConnectingSiweView extends lit/* LitElement */.WF {\n    constructor() {\n        super(...arguments);\n        this.dappName = esm_exports/* OptionsController */.Hd.state.metadata?.name;\n        this.isSigning = false;\n        this.isCancelling = false;\n    }\n    render() {\n        return (0,lit/* html */.qy) `\n      <wui-flex justifyContent=\"center\" .padding=${['2xl', '0', 'xxl', '0']}>\n        <w3m-connecting-siwe></w3m-connecting-siwe>\n      </wui-flex>\n      <wui-flex\n        .padding=${['0', '4xl', 'l', '4xl']}\n        gap=\"s\"\n        justifyContent=\"space-between\"\n      >\n        <wui-text variant=\"paragraph-500\" align=\"center\" color=\"fg-100\"\n          >${this.dappName ?? 'Dapp'} needs to connect to your wallet</wui-text\n        >\n      </wui-flex>\n      <wui-flex\n        .padding=${['0', '3xl', 'l', '3xl']}\n        gap=\"s\"\n        justifyContent=\"space-between\"\n      >\n        <wui-text variant=\"small-400\" align=\"center\" color=\"fg-200\"\n          >Sign this message to prove you own this wallet and proceed. Canceling will disconnect\n          you.</wui-text\n        >\n      </wui-flex>\n      <wui-flex .padding=${['l', 'xl', 'xl', 'xl']} gap=\"s\" justifyContent=\"space-between\">\n        <wui-button\n          size=\"lg\"\n          borderRadius=\"xs\"\n          fullWidth\n          variant=\"neutral\"\n          ?loading=${this.isCancelling}\n          @click=${this.onCancel.bind(this)}\n          data-testid=\"w3m-connecting-siwe-cancel\"\n        >\n          Cancel\n        </wui-button>\n        <wui-button\n          size=\"lg\"\n          borderRadius=\"xs\"\n          fullWidth\n          variant=\"main\"\n          @click=${this.onSign.bind(this)}\n          ?loading=${this.isSigning}\n          data-testid=\"w3m-connecting-siwe-sign\"\n        >\n          ${this.isSigning ? 'Signing...' : 'Sign'}\n        </wui-button>\n      </wui-flex>\n    `;\n    }\n    async onSign() {\n        this.isSigning = true;\n        esm_exports/* EventsController */.En.sendEvent({\n            event: 'CLICK_SIGN_SIWX_MESSAGE',\n            type: 'track',\n            properties: {\n                network: esm_exports/* ChainController */.WB.state.activeCaipNetwork?.caipNetworkId || '',\n                isSmartAccount: esm_exports/* AccountController */.Uj.state.preferredAccountType ===\n                    appkit_wallet_dist_esm/* W3mFrameRpcConstants */.Vl.ACCOUNT_TYPES.SMART_ACCOUNT\n            }\n        });\n        try {\n            SIWEController.setStatus('loading');\n            const session = await SIWEController.signIn();\n            SIWEController.setStatus('success');\n            esm_exports/* EventsController */.En.sendEvent({\n                event: 'SIWX_AUTH_SUCCESS',\n                type: 'track',\n                properties: {\n                    network: esm_exports/* ChainController */.WB.state.activeCaipNetwork?.caipNetworkId || '',\n                    isSmartAccount: esm_exports/* AccountController */.Uj.state.preferredAccountType ===\n                        appkit_wallet_dist_esm/* W3mFrameRpcConstants */.Vl.ACCOUNT_TYPES.SMART_ACCOUNT\n                }\n            });\n            return session;\n        }\n        catch (error) {\n            const preferredAccountType = esm_exports/* AccountController */.Uj.state.preferredAccountType;\n            const isSmartAccount = preferredAccountType === appkit_wallet_dist_esm/* W3mFrameRpcConstants */.Vl.ACCOUNT_TYPES.SMART_ACCOUNT;\n            if (isSmartAccount) {\n                esm_exports/* SnackController */.Pt.showError('This application might not support Smart Accounts');\n            }\n            else {\n                esm_exports/* SnackController */.Pt.showError('Signature declined');\n            }\n            SIWEController.setStatus('error');\n            return esm_exports/* EventsController */.En.sendEvent({\n                event: 'SIWX_AUTH_ERROR',\n                type: 'track',\n                properties: {\n                    network: esm_exports/* ChainController */.WB.state.activeCaipNetwork?.caipNetworkId || '',\n                    isSmartAccount\n                }\n            });\n        }\n        finally {\n            this.isSigning = false;\n        }\n    }\n    async onCancel() {\n        this.isCancelling = true;\n        const caipAddress = esm_exports/* ChainController */.WB.state.activeCaipAddress;\n        if (caipAddress) {\n            await esm_exports/* ConnectionController */.x4.disconnect();\n            esm_exports/* ModalController */.W3.close();\n        }\n        else {\n            esm_exports/* RouterController */.IN.push('Connect');\n        }\n        this.isCancelling = false;\n        esm_exports/* EventsController */.En.sendEvent({\n            event: 'CLICK_CANCEL_SIWX',\n            type: 'track',\n            properties: {\n                network: esm_exports/* ChainController */.WB.state.activeCaipNetwork?.caipNetworkId || '',\n                isSmartAccount: esm_exports/* AccountController */.Uj.state.preferredAccountType ===\n                    appkit_wallet_dist_esm/* W3mFrameRpcConstants */.Vl.ACCOUNT_TYPES.SMART_ACCOUNT\n            }\n        });\n    }\n};\nw3m_connecting_siwe_view_decorate([\n    (0,decorators/* state */.wk)()\n], W3mConnectingSiweView.prototype, \"isSigning\", void 0);\nw3m_connecting_siwe_view_decorate([\n    (0,decorators/* state */.wk)()\n], W3mConnectingSiweView.prototype, \"isCancelling\", void 0);\nW3mConnectingSiweView = w3m_connecting_siwe_view_decorate([\n    (0,dist_esm.customElement)('w3m-connecting-siwe-view')\n], W3mConnectingSiweView);\n\n//# sourceMappingURL=index.js.map\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/src/mapToSIWX.js\n\n\nfunction mapToSIWX(siwe) {\n    async function getSession() {\n        try {\n            return await siwe.methods.getSession();\n        }\n        catch (error) {\n            console.warn('AppKit:SIWE:getSession - error:', error);\n            return undefined;\n        }\n    }\n    esm_exports/* ChainController */.WB.subscribeKey('activeCaipNetwork', async (activeCaipNetwork) => {\n        if (!siwe.options.signOutOnNetworkChange) {\n            return;\n        }\n        const session = await getSession();\n        const isDiffernetNetwork = session &&\n            session.chainId !== esm/* NetworkUtil */.LX.caipNetworkIdToNumber(activeCaipNetwork?.caipNetworkId);\n        if (isDiffernetNetwork) {\n            await siwe.methods.signOut();\n        }\n    });\n    esm_exports/* ChainController */.WB.subscribeKey('activeCaipAddress', async (activeCaipAddress) => {\n        if (!siwe.options.signOutOnAccountChange) {\n            return;\n        }\n        const session = await getSession();\n        const isDifferentAddress = session && session.address !== esm_exports/* CoreHelperUtil */.wE.getPlainAddress(activeCaipAddress);\n        if (isDifferentAddress) {\n            await siwe.methods.signOut();\n        }\n    });\n    return {\n        async createMessage(input) {\n            const params = await siwe.methods.getMessageParams?.();\n            if (!params) {\n                throw new Error('Failed to get message params!');\n            }\n            const nonce = await siwe.getNonce(input.accountAddress);\n            const issuedAt = params.iat || new Date().toISOString();\n            const version = '1';\n            return {\n                nonce,\n                version,\n                requestId: params.requestId,\n                accountAddress: input.accountAddress,\n                chainId: input.chainId,\n                domain: params.domain,\n                uri: params.uri,\n                notBefore: params.nbf,\n                resources: params.resources,\n                statement: params.statement,\n                expirationTime: params.exp,\n                issuedAt,\n                toString: () => siwe.createMessage({\n                    ...params,\n                    chainId: esm/* NetworkUtil */.LX.caipNetworkIdToNumber(input.chainId) || 1,\n                    address: `did:pkh:${input.chainId}:${input.accountAddress}`,\n                    nonce,\n                    version,\n                    iat: issuedAt\n                })\n            };\n        },\n        async addSession(session) {\n            const chainId = esm/* NetworkUtil */.LX.parseEvmChainId(session.data.chainId);\n            if (!chainId) {\n                return Promise.resolve();\n            }\n            if (await siwe.methods.verifyMessage(session)) {\n                siwe.methods.onSignIn?.({\n                    address: session.data.accountAddress,\n                    chainId: esm/* NetworkUtil */.LX.parseEvmChainId(session.data.chainId)\n                });\n                return Promise.resolve();\n            }\n            throw new Error('Failed to add session');\n        },\n        async revokeSession(_chainId, _address) {\n            try {\n                await siwe.methods.signOut();\n                siwe.methods.onSignOut?.();\n            }\n            catch (error) {\n                console.warn('AppKit:SIWE:revokeSession - signOut error', error);\n            }\n        },\n        async setSessions(sessions) {\n            if (sessions.length === 0) {\n                try {\n                    await siwe.methods.signOut();\n                }\n                catch (error) {\n                    console.warn('AppKit:SIWE:setSessions - signOut error', error);\n                }\n            }\n            else {\n                const addingSessions = sessions.map(session => this.addSession(session));\n                await Promise.all(addingSessions);\n            }\n        },\n        async getSessions(chainId, address) {\n            try {\n                if (!chainId.startsWith('eip155:')) {\n                    return [\n                        {\n                            data: {\n                                accountAddress: address,\n                                chainId\n                            },\n                            message: '',\n                            signature: ''\n                        }\n                    ];\n                }\n                const siweSession = await getSession();\n                const siweCaipNetworkId = `eip155:${siweSession?.chainId}`;\n                if (!siweSession || siweSession.address !== address || siweCaipNetworkId !== chainId) {\n                    return [];\n                }\n                const session = {\n                    data: {\n                        accountAddress: siweSession.address,\n                        chainId: siweCaipNetworkId\n                    },\n                    message: '',\n                    signature: ''\n                };\n                return [session];\n            }\n            catch (error) {\n                console.warn('AppKit:SIWE:getSessions - error:', error);\n                return [];\n            }\n        }\n    };\n}\n//# sourceMappingURL=mapToSIWX.js.map\n;// CONCATENATED MODULE: ./node_modules/@reown/appkit-siwe/dist/esm/exports/index.js\n\n\n\n\n\nfunction createSIWEConfig(siweConfig) {\n    return new AppKitSIWEClient(siweConfig);\n}\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32680\n")}}]);